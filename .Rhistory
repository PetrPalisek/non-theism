) +
labs(title = 'Low material security') +
scale_x_discrete(name = "", labels = c("Wave1", "Wave2","Wave3","Wave4"),expand = c(0.05,0.05)) +
scale_y_continuous(name = "Count", breaks = seq(0,1000,200),
limits = c(0,1100)) +
theme_bw()  +
theme(
#panel.border = element_blank(),
# panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = rel(2)),
axis.line = element_line(colour = "black"),
legend.position = "top",
legend.justification = c("right", "top"),
legend.text = element_text(size = rel(1.5)),
legend.title = element_text(size = rel(1.5)),
legend.key.size = unit(0.8, "cm"),
axis.title = element_text(size = rel(1.5)),
axis.text= element_text(size = rel(1.5)),
plot.margin=unit(c(0.4,0.4,-1,0.4),"cm"),
strip.text.x = element_text(size = rel(2)))
p2 <- easyalluvial::alluvial_long(df_plot[df_plot$MS==2,]
, key = T
, value = value
, id = id
, stratum_label_size = 3.5
, fill_by = 'value'
, NA_label = 'None'
, col_vector_value = col_vector
, col_vector_flow = col_vector
) +
labs(title = 'Medium material security') +
scale_x_discrete(name = "", labels = c("Wave1", "Wave2","Wave3","Wave4"),expand = c(0.05,0.05)) +
scale_y_continuous(name = "Count", breaks = seq(0,1000,200),
limits = c(0,1100)) +
theme_bw()   +
theme(
#panel.border = element_blank(),
# panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = rel(2)),
axis.line = element_line(colour = "black"),
legend.position = "top",
legend.justification = c("right", "top"),
legend.text = element_text(size = rel(1.5)),
legend.title = element_text(size = rel(1.5)),
legend.key.size = unit(0.8, "cm"),
axis.title = element_text(size = rel(1.5)),
axis.text= element_text(size = rel(1.5)),
plot.margin=unit(c(0.4,0.4,-1,0.4),"cm"),
strip.text.x = element_text(size = rel(2)))
p3 <- easyalluvial::alluvial_long(df_plot[df_plot$MS==3,]
, key = T
, value = value
, id = id
, stratum_label_size = 3.5
, fill_by = 'value'
, NA_label = 'None'
, col_vector_value = col_vector
, col_vector_flow = col_vector
) +
labs(title = 'High material security') +
scale_x_discrete(name = "", labels = c("Wave1", "Wave2","Wave3","Wave4"),expand = c(0.05,0.05)) +
scale_y_continuous(name = "Count", breaks = seq(0,1000,200),
limits = c(0,1100)) +
theme_bw()  +
theme(
#panel.border = element_blank(),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5, size = rel(2)),
axis.line = element_line(colour = "black"),
legend.position = "top",
legend.justification = c("right", "top"),
legend.text = element_text(size = rel(1.5)),
legend.title = element_text(size = rel(1.5)),
legend.key.size = unit(0.8, "cm"),
axis.title = element_text(size = rel(1.5)),
axis.text= element_text(size = rel(1.5)),
plot.margin=unit(c(0.4,0.4,-1,0.4),"cm"),
strip.text.x = element_text(size = rel(2)))
# Arrange subplots into the final plot and save
gx <- ggpubr::ggarrange(p1, p2, p3, ncol=1, nrow = 3,
labels = c('A.', 'B.', 'C.'),
font.label = list(size = 18, face = "bold", color ="black"),
common.legend = T)
gx
ggplot2::ggsave("Alluvial_plot.png", plot = gx, width = 12, height = 16,
dpi = 600)
## Summaries -------------------------------------------------------------
dfSummary(df)
# Imputation --------------------------------------------------------------
# Number of imputed df
N.Imp <-  50
# Create a column that contain the appropriate model for each variable
# - this only works if the variable is of the correct data type in the first place
names(df)
type <- c("", "", "", "", "","pmm", "polr",
"", "", "", "polr", "polr", "", "",
"", "", "polr", "polr", "", "", "polr",
"polr", "polr", "polr", "", "", "polr", "pmm",
"polr", "polr", "", "", "polr", "pmm", "",
"", "", "", "", "", "", "",
"", "", "", "", "", "", "",
"", "", "", "", "", "", "",
"", "", "", "polr", "polr", "polr", "",
"")
df_imp <- mice::mice(df, m = N.Imp, method = type, seed = 3333)
# Exract each DF
mice.imp <- list()
for(i in 1:N.Imp) {
mice.imp[[i]] <- mice::complete(df_imp, action= i, inc=FALSE)
# remove spaces and other charecters on colnames
colnames( mice.imp[[i]]) <- gsub(" ", "", colnames( mice.imp[[i]]), fixed = TRUE)
colnames( mice.imp[[i]]) <- gsub("/", "", colnames( mice.imp[[i]]), fixed = TRUE)
colnames( mice.imp[[i]]) <- gsub("-", "_", colnames( mice.imp[[i]]), fixed = TRUE)
}
# Models --------------------------------------------------------
## Baseline ---------------------------------------------------
base <- "
BiG1 ~ 0*MS1
BiG2 ~ BiG1 + h1a*MS1
BiG3 ~ ar3*BiG2 + h1b*MS1
BiG4 ~ ar4*BiG3 + h1c*MS1
eta_BiG =~ BiG1 + 1*BiG2 + 1*BiG3 + 1*BiG4
BiG1 | l*t1
BiG2 | k*t1
BiG2 | l*t2
BiG3 | k*t1
BiG3 | l*t2
BiG4 | k*t1
BiG4 | l*t2
BiG1 ~ 0*1
BiG2 ~ NA*1
BiG3 ~ NA*1
BiG4 ~ NA*1
## MS1 -> BiG2 -> BiG3
ms1_big3 := h1a*ar3
## MS1 -> BiG3 -> BiG4
ms1_big4 := h1b*ar4
h1a_ := h1a
h1b_ := h1b
h1c_ := h1c
sumH1 := h1a_ + h1b_ + h1c_ + ms1_big3 + ms1_big4"
base_mi <- lavaan.mi::sem.mi(base, mice.imp, ordered = c("BiG1","BiG2", "BiG3", "BiG4"), meanstructure = T,
estimator = "WLSMV",
missing = "pairwise",
parameterization = "theta", std.lv = T)
standardizedSolution.mi(base_mi) %>% data.frame() %>% filter(op == ":=")
fitmeasures(base_mi)
base <- "
BiG1 ~ 0*MS1
BiG2 ~ BiG1 + h1a*MS1
BiG3 ~ ar3*BiG2 + h1b*MS1
BiG4 ~ ar4*BiG3 + h1c*MS1
eta_BiG =~ BiG1 + 1*BiG2 + 1*BiG3 + 1*BiG4
BiG1 | l*t1
BiG2 | k*t1
BiG2 | l*t2
BiG3 | k*t1
BiG3 | l*t2
BiG4 | k*t1
BiG4 | l*t2
BiG1 ~ 0*1
BiG2 ~ NA*1
BiG3 ~ NA*1
BiG4 ~ NA*1
## MS1 -> BiG2 -> BiG3
ms1_big3 := h1a*ar3
## MS1 -> BiG3 -> BiG4
ms1_big4 := h1b*ar4
h1a_ := h1a
h1b_ := h1b
h1c_ := h1c"
base_mi <- lavaan.mi::sem.mi(base, mice.imp, ordered = c("BiG1","BiG2", "BiG3", "BiG4"), meanstructure = T,
estimator = "WLSMV",
missing = "pairwise",
parameterization = "theta", std.lv = T)
fitmeasures(base_mi)
base_mi_params <- extract_defined_params_lavaanmi(base_mi)
hypothesis <-  "h1a_ + h1b_ + h1c_ + ms1_big3 + ms1_big4 < 0"
H1_base <- restriktor::goric(base_mi_params[["est"]], VCOV = base_mi_params[["VCOV"]],
hypotheses = list(hypothesis), comparison = "complement")
benchmark(H1_base)
## Controls ---------------------------------------------------
controls <- "
BiG1 ~ Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE + OtherE
BiG2 ~ Male + BlackProt + Catholic + MainProt   + BlackE + LatinxE + OtherE
BiG3 ~ Male + BlackProt + Catholic + MainProt + BlackE + LatinxE + OtherE
BiG4 ~ Age + Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE  + OtherE +
Inc3 + ParRit + College + AAVOC + PST
BiG2 ~ BiG1 + h1a*MS1
BiG3 ~ ar3*BiG2 + h1b*MS1
BiG4 ~ ar4*BiG3 + h1c*MS1
eta_BiG =~ BiG1 + 1*BiG2 + 1*BiG3 + 1*BiG4
# Misc
MS1 ~ ParCollege + ParAAVOC + BlackE + LatinxE + OtherE
BlackProt ~ BlackE
Catholic ~ LatinxE
BlackProt + MainProt + Catholic ~ OtherE
College + AAVOC ~ ParCollege + ParAAVOC + Age + MS1
Inc3 ~ MS1
ParRit ~ ParCollege + ParAAVOC
## MS1 -> BiG2 -> BiG3
ms1_big3 := h1a*ar3
## MS1 -> BiG3 -> BiG4
ms1_big4 := h1b*ar4
h1a_ := h1a
h1b_ := h1b
h1c_ := h1c
BiG1 | l*t1
BiG2 | k*t1
BiG2 | l*t2
BiG3 | k*t1
BiG3 | l*t2
BiG4 | k*t1
BiG4 | l*t2
BiG1 ~ 0*1
BiG2 ~ NA*1
BiG3 ~ NA*1
BiG4 ~ NA*1
sumH1 := h1a_ + h1b_ + h1c_ + ms1_big3 + ms1_big4
"
controls_mi <- lavaan.mi::sem.mi(controls, mice.imp,
ordered = c("BiG1","BiG2", "BiG3", "BiG4", "ParRit", "PST"),
meanstructure = T,
estimator = "WLSMV", missing = "pairwise",
parameterization = "theta", std.lv = T)
standardizedSolution.mi(controls_mi) %>% data.frame() %>% filter(op == ":=")
controls <- "
BiG1 ~ Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE + OtherE
BiG2 ~ Male + BlackProt + Catholic + MainProt   + BlackE + LatinxE + OtherE
BiG3 ~ Male + BlackProt + Catholic + MainProt + BlackE + LatinxE + OtherE
BiG4 ~ Age + Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE  + OtherE +
Inc3 + ParRit + College + AAVOC + PST
BiG2 ~ BiG1 + h1a*MS1
BiG3 ~ ar3*BiG2 + h1b*MS1
BiG4 ~ ar4*BiG3 + h1c*MS1
eta_BiG =~ BiG1 + 1*BiG2 + 1*BiG3 + 1*BiG4
# Misc
MS1 ~ ParCollege + ParAAVOC + BlackE + LatinxE + OtherE
BlackProt ~ BlackE
Catholic ~ LatinxE
BlackProt + MainProt + Catholic ~ OtherE
College + AAVOC ~ ParCollege + ParAAVOC + Age + MS1
Inc3 ~ MS1
ParRit ~ ParCollege + ParAAVOC
## MS1 -> BiG2 -> BiG3
ms1_big3 := h1a*ar3
## MS1 -> BiG3 -> BiG4
ms1_big4 := h1b*ar4
h1a_ := h1a
h1b_ := h1b
h1c_ := h1c
BiG1 | l*t1
BiG2 | k*t1
BiG2 | l*t2
BiG3 | k*t1
BiG3 | l*t2
BiG4 | k*t1
BiG4 | l*t2
BiG1 ~ 0*1
BiG2 ~ NA*1
BiG3 ~ NA*1
BiG4 ~ NA*1
"
controls_mi <- lavaan.mi::sem.mi(controls, mice.imp,
ordered = c("BiG1","BiG2", "BiG3", "BiG4", "ParRit", "PST"),
meanstructure = T,
estimator = "WLSMV", missing = "pairwise",
parameterization = "theta", std.lv = T)
fitmeasures(controls_mi)
controls_mi_params <- extract_defined_params_lavaanmi(controls_mi)
hypothesis <-  "h1a_ + h1b_ + h1c_ + ms1_big3 + ms1_big4 < 0"
H1_controls <- restriktor::goric(controls_mi_params[["est"]], VCOV = controls_mi_params[["VCOV"]],
hypotheses = list(hypothesis), comparison = "complement")
benchmark(H1_controls)
## Full ordinal (slightly cut) ---------------------------------------------------
full_ordinal <- "
PST_l =~ PST
PST ~~ 0*PST
BiG1 ~ Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE + OtherE
BiG2 ~ Male + BlackProt + Catholic + MainProt   + BlackE + LatinxE + OtherE
BiG3 ~ Male + BlackProt + Catholic + MainProt + BlackE + LatinxE + OtherE
BiG4 ~ Age + Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE  + OtherE +
Inc3 + ParRit + College + AAVOC + PST_l
eta_BiG =~ BiG1 + 1*BiG2 + 1*BiG3 + 1*BiG4
BiG2 ~ BiG1 + h1a*MS1
BiG3 ~ ar3*BiG2 + h1b*MS1+ h2.1a*H2 +h2.2a*T2 + PR2_l + CR2_l
BiG4 ~ ar4*BiG3 + h1c*MS1 + h2.1b*H2 + h2.2b*T2 + h2.1d*H3 + h3.2b*PR3 +  h3.1b*CR3
# Misc
MS1 ~ ParCollege + ParAAVOC + BlackE + LatinxE + OtherE
BlackProt ~ BlackE
Catholic ~ LatinxE
BlackProt + MainProt + Catholic ~ OtherE
College + AAVOC ~ ParCollege + ParAAVOC + Age + MS1
Inc3 ~ MS1
ParRit ~ ParCollege + ParAAVOC
# PR
PR2_l =~ PR2
PR2 ~~ 0*PR2
PR3 ~  PR2_l + h3.1a*H2 + T2
# CR
CR2_l =~ CR2
CR2 ~~ 0*CR2
CR3 ~ CR2_l + H2 + h3.2a*T2
# H
H2 ~ MS1
H3 ~ arH*H2
# T
T2 ~ MS1
## MS1 -> BiG2 -> BiG3
ms1_big3 := h1a*ar3
## MS1 -> BiG3 -> BiG4
ms1_big4 := h1b*ar4
## H2 -> BiG3 -> BiG4
h2_big4 := h2.1a*ar4
## T2 -> BiG3 -> BiG4
t2_big4 := h2.2a*ar4
## H2 -> H3 -> BiG4
h2_h3_big4 := arH*h2.1d
h1a_ := h1a
h1b_ := h1b
h1c_ := h1c
## H2 -> PR3 -> BiG4
h3.1indirect := h3.1a*h3.1b
h3.1direct := h2.1b
## T2 -> CR3 -> BiG4
h3.2indirect := h3.2a*h3.2b
h3.2direct := h2.2b
BiG1 | l*t1
BiG2 | k*t1
BiG2 | l*t2
BiG3 | k*t1
BiG3 | l*t2
BiG4 | k*t1
BiG4 | l*t2
BiG1 ~ 0*1
BiG2 ~ NA*1
BiG3 ~ NA*1
BiG4 ~ NA*1
PR2 | pr1*t1
PR2 | pr2*t2
PR2 | pr3*t3
PR2 | pr4*t4
PR2 | pr5*t5
PR2 | pr6*t6
PR3 | pr1*t1
PR3 | pr2*t2
PR3 | pr3*t3
PR3 | pr4*t4
PR3 | pr5*t5
PR3 | pr6*t6
CR2 | cr1*t1
CR2 | cr2*t2
CR2 | cr3*t3
CR2 | cr4*t4
CR2 | cr5*t5
CR2 | cr6*t6
CR3 | cr1*t1
CR3 | cr2*t2
CR3 | cr3*t3
CR3 | cr4*t4
CR3 | cr5*t5
CR3 | cr6*t6
H2 | hth1*t1
H2 | hth2*t2
H2 | hth3*t3
H2 | hth4*t4
H3 | hth1*t1
H3 | hth2*t2
H3 | hth3*t3
H3 | hth4*t4
PR2 ~ 0*1
PR3 ~ NA*1
CR2 ~ 0*1
CR3 ~ NA*1
H2 ~ 0*1
H3 ~ NA*1
sumH1 := h1a_ + h1b_ + h1c_ + ms1_big3 + ms1_big4
sumH2_1 := h3.1direct + h2_big4 + h2_h3_big4
sumH2_2 := h3.2direct + t2_big4
"
full_ordinal_fit <- lavaan.mi::sem.mi(full_ordinal, mice.imp,
estimator = "WLSMV", parameterization = "theta",
meanstructure = T, ordered = c("BiG1", "BiG2", "BiG3", "BiG4", "ParRit", "PR2",
"PR3", "CR2", "CR3", "H2", "H3", "T2", "PST"),
missing = "listwise",  control = list(iter.max = 10e5))
s <- standardizedSolution.mi(full_ordinal_fit) %>% data.frame()
s[,5:10] <-  s[,5:10] %>% round(3)
s %>% filter(op == "~") %>% filter(grepl("BiG", lhs)) %>% filter(grepl("BiG", rhs))
s %>% filter(op == "~") %>% filter(grepl("BiG", lhs)) %>% filter(grepl("MS", rhs))
s %>% filter(op == "~") %>% filter(grepl("H2", lhs)) %>% filter(grepl("MS", rhs))
s %>% filter(op == "~") %>% filter(grepl("T2", lhs)) %>% filter(grepl("MS", rhs))
s %>% filter(op == "~") %>% filter(grepl("H2", rhs)) %>% filter(grepl("PR", lhs))
s %>% filter(op == "~") %>% filter(grepl("PR", rhs))
s %>% filter(op == "~") %>% filter(grepl("CR", lhs))
s %>% filter(op == "~") %>% filter(grepl("CR", rhs))
s %>% filter(op == ":=") %>% filter(grepl("indirect", label))
s %>% filter(op == ":=") %>% filter(grepl("sum", label))
s %>% filter(op == ":=")
full_ordinal <- "
PST_l =~ PST
PST ~~ 0*PST
BiG1 ~ Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE + OtherE
BiG2 ~ Male + BlackProt + Catholic + MainProt   + BlackE + LatinxE + OtherE
BiG3 ~ Male + BlackProt + Catholic + MainProt + BlackE + LatinxE + OtherE
BiG4 ~ Age + Male + BlackProt + Catholic + MainProt  + BlackE + LatinxE  + OtherE +
Inc3 + ParRit + College + AAVOC + PST_l
eta_BiG =~ BiG1 + 1*BiG2 + 1*BiG3 + 1*BiG4
BiG2 ~ BiG1 + h1a*MS1
BiG3 ~ ar3*BiG2 + h1b*MS1+ h2.1a*H2 +h2.2a*T2 + PR2_l + CR2_l
BiG4 ~ ar4*BiG3 + h1c*MS1 + h2.1b*H2 + h2.2b*T2 + h2.1d*H3 + h3.2b*PR3 +  h3.1b*CR3
# Misc
MS1 ~ ParCollege + ParAAVOC + BlackE + LatinxE + OtherE
BlackProt ~ BlackE
Catholic ~ LatinxE
BlackProt + MainProt + Catholic ~ OtherE
College + AAVOC ~ ParCollege + ParAAVOC + Age + MS1
Inc3 ~ MS1
ParRit ~ ParCollege + ParAAVOC
# PR
PR2_l =~ PR2
PR2 ~~ 0*PR2
PR3 ~  PR2_l + h3.1a*H2 + T2
# CR
CR2_l =~ CR2
CR2 ~~ 0*CR2
CR3 ~ CR2_l + H2 + h3.2a*T2
# H
H2 ~ MS1
H3 ~ arH*H2
# T
T2 ~ MS1
## MS1 -> BiG2 -> BiG3
ms1_big3 := h1a*ar3
## MS1 -> BiG3 -> BiG4
ms1_big4 := h1b*ar4
## H2 -> BiG3 -> BiG4
h2_big4 := h2.1a*ar4
## T2 -> BiG3 -> BiG4
t2_big4 := h2.2a*ar4
## H2 -> H3 -> BiG4
h2_h3_big4 := arH*h2.1d
h1a_ := h1a
h1b_ := h1b
h1c_ := h1c
## H2 -> PR3 -> BiG4
h3.1indirect := h3.1a*h3.1b
h3.1direct := h2.1b
## T2 -> CR3 -> BiG4
h3.2indirect := h3.2a*h3.2b
h3.2direct := h2.2b
BiG1 | l*t1
BiG2 | k*t1
BiG2 | l*t2
BiG3 | k*t1
BiG3 | l*t2
BiG4 | k*t1
BiG4 | l*t2
BiG1 ~ 0*1
BiG2 ~ NA*1
BiG3 ~ NA*1
BiG4 ~ NA*1
PR2 | pr1*t1
PR2 | pr2*t2
PR2 | pr3*t3
PR2 | pr4*t4
PR2 | pr5*t5
PR2 | pr6*t6
PR3 | pr1*t1
PR3 | pr2*t2
PR3 | pr3*t3
PR3 | pr4*t4
PR3 | pr5*t5
PR3 | pr6*t6
CR2 | cr1*t1
CR2 | cr2*t2
CR2 | cr3*t3
CR2 | cr4*t4
CR2 | cr5*t5
CR2 | cr6*t6
CR3 | cr1*t1
CR3 | cr2*t2
CR3 | cr3*t3
CR3 | cr4*t4
CR3 | cr5*t5
CR3 | cr6*t6
H2 | hth1*t1
H2 | hth2*t2
H2 | hth3*t3
H2 | hth4*t4
H3 | hth1*t1
H3 | hth2*t2
H3 | hth3*t3
H3 | hth4*t4
PR2 ~ 0*1
PR3 ~ NA*1
CR2 ~ 0*1
CR3 ~ NA*1
H2 ~ 0*1
H3 ~ NA*1
"
full_ordinal_fit <- lavaan.mi::sem.mi(full_ordinal, mice.imp,
estimator = "WLSMV", parameterization = "theta",
meanstructure = T, ordered = c("BiG1", "BiG2", "BiG3", "BiG4", "ParRit", "PR2",
"PR3", "CR2", "CR3", "H2", "H3", "T2", "PST"),
missing = "listwise",  control = list(iter.max = 10e5))
standardizedSolution.mi(full_ordinal_fit) %>% data.frame() %>% filter(op == ":=")
fitmeasures(full_ordinal_fit)
s <- lavaan.mi::standardizedSolution.mi(full_ordinal_fit)
standardizedSolution.mi(full_ordinal_fit, return.vcov = F, type = "cov.lv")
